<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- /resources/로 요청하면 실제 /resources/위치에서 찾아서 실행하겠다는 의미
		 mapping은 요청 path, location은 실제 파일이 저장된 위치
	 -->
	 <!-- 이미지 -->
	<resources mapping="/images/**" location="/resources/images/" />

	 <!-- css -->
	<resources mapping="/common/css/**" location="/resources/**/**/" />

	 <!-- js -->
	<resources mapping="/common/js/**" location="/resources/**/**/" />
	
	<!-- /WEB-INF/static/images를 만들고 작업하는 경우 -->
<!--  <resources mapping="/images/**" location="/WEB-INF/static/images/" />  -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	<context:component-scan base-package="com.playdata.springmvc" />
	<context:component-scan base-package="main" />
	<context:component-scan base-package="test" />
	<context:component-scan base-package="springjdbc" />
	<!-- ================================== 스프링 JDBC연동을 위해서 필요한 라이브러리 ======================================== -->
	<!-- jdbc에서 DriverManager방식으로 커넷견을 생성해서 관리 (요청이 들어오면 커넥션을 생성해서 넘겨주는 방식 -->
	<beans:bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@192.168.0.7:1521:xe"/>
		<beans:property name="username" value="hr"/>
		<beans:property name="password" value="hr"/>
	</beans:bean>	
	
	<!-- SQL을 실행할 수 있는 기능을 제공하는 클래스 -->
	<beans:bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:constructor-arg ref="ds"/>
	</beans:bean>
	
	<!-- ============================tiles기반으로 view 정보를 만드는 ViewResolver 등록============================= -->
	<!-- 1. tiles 설정파일을 스프링 내부에서 인식할 수 있도록 등록 -->
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" id="tilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/**/*-tiles.xml</beans:value>
			</beans:list>
		</beans:property>	
	</beans:bean>
	<!-- 2. tiles 기반으로 view를 만들 수 있도록 ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<beans:property name="order" value="1"/>
	</beans:bean>

</beans:beans>
